//******** AUTO GENERATED FILE, DO NOT EDIT.  *********

generator client {
  provider   = "prisma-client-js"
  engineType = "binary"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Address {
  id     String @id @default(uuid()) @db.VarChar(36)
  userId String @map("user_id") @db.VarChar(36)

  fullName  String  @map("full_name") @db.VarChar(100)
  phone     String  @db.VarChar(20)
  address   String  @db.VarChar(50)
  ward      String  @db.VarChar(50)
  district  String  @db.VarChar(50)
  city      String  @db.VarChar(50)
  country   String  @db.VarChar(50)
  latitude  Int?
  longitude Int?
  isDefault Boolean @default(false) @map("is_default")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  user User @relation(fields: [userId], references: [id])

  @@map("addresses")
}

model Benefit {
  id          String @id @default(uuid()) @db.VarChar(36)
  promotionId String @unique @map("promotion_id") @db.VarChar(36)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  discount  Discount?
  promotion Promotion @relation(fields: [promotionId], references: [id])
  gifts     Gift[]

  @@map("benefits")
}

model Booking {
  id              String @id @default(uuid()) @db.VarChar(36)
  userId          String @default(uuid()) @map("user_id") @db.VarChar(36)
  repairServiceId String @default(uuid()) @map("repair_service_id") @db.VarChar(36)

  description String @db.Text

  user          User          @relation(references: [id], fields: [userId])
  repairService RepairService @relation(references: [id], fields: [repairServiceId])
  createdAt     DateTime      @default(now()) @map("created_at")
  updatedAt     DateTime      @updatedAt @map("updated_at")
  deletedAt     DateTime?     @map("deleted_at")

  @@map("bookings")
}

model Card {
  id     String @id @default(uuid()) @db.VarChar(36)
  userId String @map("user_id") @db.VarChar(36)

  pm        String  @db.VarChar(255)
  type      String
  isDefault Boolean @default(false) @map("is_default")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  user User @relation(fields: [userId], references: [id])

  @@map("cards")
}

model CartItem {
  id        String @id @default(uuid()) @db.VarChar(36)
  userId    String @map("user_id") @db.VarChar(36)
  productId String @map("product_id") @db.VarChar(36)

  quantity  Int       @default(1)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  user    User    @relation(fields: [userId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@map("cart_items")
}

model Category {
  id           String  @id @default(uuid()) @db.VarChar(36)
  name         String  @db.VarChar(50)
  slug         String  @db.VarChar(255)
  description  String  @db.Text
  image        String  @db.VarChar(100)
  isDeprecated Boolean @default(false)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  products Product[]

  @@map("categories")
}

model Condition {
  id          String @id @default(uuid()) @db.VarChar(36)
  promotionId String @unique @map("promotion_id") @db.VarChar(36)

  orderValueMin Float @map("order_value_min")
  orderValueMax Float @map("order_value_max")
  minQuantity   Int   @default(1) @map("min_quantity")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  promotion Promotion @relation(fields: [promotionId], references: [id])

  @@map("conditions")
}

model Discount {
  id        String @id @default(uuid()) @db.VarChar(36)
  benefitId String @unique @map("benefit_id") @db.VarChar(36)

  percent           Int
  maxAmount         Float
  flat              Int?
  maxAmountPerOrder Float @map("max_amount_per_order")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  benefit Benefit @relation(fields: [benefitId], references: [id])

  @@map("discounts")
}

model Gallery {
  id        String @id @default(uuid()) @db.VarChar(36)
  productId String @db.VarChar(36)

  label String? @db.VarChar(50)
  url   String  @db.Text
  type  String?
  order Int     @default(0)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  product Product @relation(fields: [productId], references: [id])

  @@map("galleries")
}

model Gift {
  id        String @id @default(uuid()) @db.VarChar(36)
  benefitId String @db.VarChar(36)

  sku                 String @db.VarChar(255)
  name                String @db.VarChar(50)
  image               String @db.VarChar(100)
  quantity            Int
  maxQuantityPerOrder Int    @default(1) @map("max_quantity_per_order")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  benefit Benefit @relation(fields: [benefitId], references: [id])

  @@map("gifts")
}

model OrderItem {
  orderId   String @map("order_id") @db.VarChar(36)
  productId String @map("product_id") @db.VarChar(36)

  productData            Json   @map("product_data")
  quantity               Int
  discount               Float?
  totalPrice             Float  @map("total_price")
  totalPriceWithDiscount Float? @map("total_price_with_discount")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  order   Order   @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@id([orderId, productId])
  @@map("order_items")
}

model Order {
  id     String @id @default(uuid()) @db.VarChar(36)
  userId String @db.VarChar(36)

  status         String  @db.VarChar(20)
  totalPrice     Float   @map("total_price")
  paymentMethod  String  @map("payment_method") @db.VarChar(20)
  paymentId      String? @map("payment_id") @db.VarChar(255)
  paymentDetails Json?   @map("payment_details")
  addressData    Json    @map("address_data")
  notes          String? @db.VarChar(255)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  user       User        @relation(fields: [userId], references: [id])
  orderItems OrderItem[]

  @@map("orders")
}

model Product {
  id         String @id @default(uuid()) @db.VarChar(36)
  categoryId String @db.VarChar(36)

  name        String @db.VarChar(50)
  slug        String @db.VarChar(255)
  description String @db.Text
  sku         String @db.VarChar(255)
  price       Float  @default(0)
  quantity    Int    @default(0)
  image       String @db.Text
  discount    Int?   @default(0)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  category       Category        @relation(fields: [categoryId], references: [id])
  galleries      Gallery[]
  orderItems     OrderItem[]
  cartItems      CartItem[]
  repairServices RepairService[]

  @@map("products")
}

model Promotion {
  id String @id @default(uuid()) @db.VarChar(36)

  name        String   @db.VarChar(255)
  description String   @db.Text
  image       String   @db.VarChar(100)
  endDate     DateTime @map("end_date")
  isDefault   Boolean  @default(false) @map("is_default")
  applyOn     String?  @map("apply_on")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  condition Condition?
  benefit   Benefit?

  @@map("promotions")
}

model RepairPartner {
  id              String @id @default(uuid()) @db.VarChar(36)
  userId          String @unique @map("user_id") @db.VarChar(36)
  stripeAccountId String @map("stripe_account_id")

  bussinessType    String    @map("bussiness_type") @db.VarChar(20)
  companyIndustry  String    @default("Consulting services") @map("company_industry") @db.VarChar(100)
  bussinessWebSite String?   @map("bussiness_website") @db.VarChar(200)
  firstName        String    @map("first_name") @db.VarChar(100)
  lastName         String    @map("last_name") @db.VarChar(100)
  email            String    @db.VarChar(100)
  dob              DateTime?
  country          String?   @db.VarChar(200)
  addressLine1     String?   @map("address_line1") @db.VarChar(255)
  addressLine2     String?   @map("address_line2") @db.VarChar(255)
  city             String?   @db.VarChar(255)
  state            String?   @db.VarChar(200)
  postalCode       String?   @map("postal_code") @db.VarChar(200)
  phoneNumber      String?   @map("phone_number") @db.VarChar(20)
  bankAccountId    String?   @map("bank_account_id")

  repairServices RepairService[]
  user           User            @relation(references: [id], fields: [userId])
  createdAt      DateTime        @default(now()) @map("created_at")
  updatedAt      DateTime        @updatedAt @map("updated_at")
  deletedAt      DateTime?       @map("deleted_at")

  @@map("repair_partner")
}

model RepairService {
  id              String @id @default(uuid()) @db.VarChar(36)
  productId       String @map("product_id") @db.VarChar(36)
  repairPartnerId String @map("repair_partner_id") @db.VarChar(36)

  name        String @db.VarChar(200)
  price       Float
  description String @db.Text

  product       Product       @relation(references: [id], fields: [productId])
  repairPartner RepairPartner @relation(references: [id], fields: [repairPartnerId])
  bookings      Booking[]
  createdAt     DateTime      @default(now()) @map("created_at")
  updatedAt     DateTime      @updatedAt @map("updated_at")
  deletedAt     DateTime?     @map("deleted_at")

  @@map("repair_services")
}

model User {
  id      String @id @default(uuid()) @db.VarChar(36)
  clerkId String @map("clerk_id") @db.Text

  userName  String    @db.VarChar(50)
  email     String    @db.VarChar(50)
  phone     String    @db.VarChar(20)
  firstName String    @map("first_name") @db.VarChar(50)
  lastName  String?   @map("last_name") @db.VarChar(50)
  avatar    String?   @db.Text
  cover     String?   @db.Text
  role      String    @db.VarChar(10)
  dob       DateTime? @map("date_of_birth")
  gender    String    @db.VarChar(10)

  customerId String? @map("customer_id") @db.VarChar(100)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  addresses     Address[]
  cartItems     CartItem[]
  orders        Order[]
  card          Card[]
  bookings      Booking[]
  repairPartner RepairPartner?

  @@map("users")
}
